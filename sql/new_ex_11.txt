-- ex 1
WITH psp(ds) AS -- data primei opriri a unui sofer la Restaurantul Ceptura din Ploiesti
    (SELECT to_char(min(sip.data_sosire), 'dd-mm-yyyy')
     FROM locatie sl JOIN popas sp ON (sl.id_locatie = sp.id_locatie)
                     JOIN istoric_popasuri sip ON(sp.id_popas = sip.id_popas)
     WHERE initcap(sp.nume) = 'Restaurant Ceptura' and initcap(sl.localitate) = 'Ploiesti'
     )

SELECT DECODE((SELECT upper(substr(sc.nr_inmatriculare, 0, 2))
               FROM camion sc JOIN istoric_camioane_conduse sic ON(sc.id_camion = sic.id_camion)
                              JOIN angajat sa ON(sic.id_angajat = sa.id_angajat)
               WHERE sic.id_angajat = a.id_angajat 
                    and ip.data_sosire < NVL(sic.data_sfarsit, sysdate)
                    and ip.data_sosire > NVL(sic.data_inceput, sysdate)
               ), 'PH', 'Din Prahova', 'Alta regiune' 
              ) "Verifica camion din Prahova", 
       a.nume "Nume angajat", a.prenume "Prenume angajat", a.salariu "Salariu", 
       p.nume "Nume popas", initcap(p.tip_popas) "Tip popas",
       to_char(ip.data_sosire, 'hh24:mi') "Ora sosire",
       substr(numtodsinterval((ip.data_plecare - ip.data_sosire), 'DAY'), 12, 5) "Durata",
       (SELECT CASE WHEN salariu <=3000 THEN salariu * 0.005
                    WHEN salariu <=4500 THEN salariu * 0.01
                    WHEN salariu > 4500 THEN salariu * 0.015
               END 
        FROM angajat ssa
        WHERE a.id_angajat = ssa.id_angajat
       ) || 'lei' "bani cheltuiti",
       'Jud: ' || NVL(l.judet, '-') || ' Loc: ' || NVL(l.localitate, '-') ||
       ' Str. ' || NVL(l.strada, '-') || ' Nr. ' || NVL(to_char(l.nr), '-') "Locatie popas"
FROM istoric_popasuri ip JOIN angajat a ON(ip.id_angajat = a.id_angajat)
                         JOIN popas p ON(ip.id_popas = p.id_popas)
                         JOIN locatie l ON(p.id_locatie = l.id_locatie)
WHERE a.tip_angajat = 'SOFER' 
    and to_char(data_sosire, 'dd-mm-yyyy') = (SELECT * FROM psp)
ORDER BY a.nume, a.prenume;



-- 2

WITH 
    avgs AS -- media salariilor paznicilor per firma
    (SELECT round(avg(salariu)) salariu, id_firma
     FROM angajat
     WHERE tip_angajat = 'PAZNIC'
     GROUP BY id_firma
     ),
    
    cm_vizitat_popas AS -- id-ul celui mai vizitat popas
    (
     SELECT id_popas popas
     FROM istoric_popasuri
     GROUP BY id_popas
     HAVING count(id_popas) = (SELECT max(count(id_popas))
                               FROM istoric_popasuri
                               GROUP BY id_popas
                               )
     ),
     
    loc_cm_vizitat_popas AS -- localitatea in care se afla cel mai vizitat popas
    (SELECT sl.localitate localitate
     FROM locatie sl JOIN popas sp ON (sl.id_locatie = sp.id_locatie),
          cm_vizitat_popas cmvp
     WHERE sp.id_popas = cmvp.popas
     )
     

SELECT a.nume "Nume paznic", a.prenume "Prenume paznic", 
        CASE WHEN a.salariu < avgs.salariu THEN a.salariu + 200
             ELSE a.salariu + 100
        END "Salariu dorit",
        DECODE((a.salariu-3000)-abs(a.salariu-3000)         
         , 0, 'bine platit', 'prost platit') "Cat de bine este platit", 
        concat(substr(numtodsinterval((sysdate - a.data_angajare), 'DAY'), 8, 3) ||' zile ',
            substr(numtodsinterval((sysdate - a.data_angajare), 'DAY'), 12, 5)) "Vechime angajat",
        f.nume "Nume firma",
        'Jud: ' || NVL(l.judet, '-') || ' Loc: ' || NVL(l.localitate, '-') ||
        ' Str. ' || NVL(l.strada, '-') || ' Nr. ' || NVL(to_char(l.nr), '-') "Locatie depozit repartizat",
        
        ( -- nr de colegi ai unui angajat
         SELECT DECODE(count(id_echipa_paza)-1, 0, 'Nu are colegi', 1, 
                 to_char(count(id_echipa_paza)-1) || ' coleg', 
                 to_char(count(id_echipa_paza)-1) || ' colegi')
         FROM angajat
         WHERE id_echipa_paza = a.id_echipa_paza
         GROUP BY id_echipa_paza
         ) "Nr. Colegi"
        
FROM echipa_paza ep JOIN firma f ON (ep.id_firma = f.id_firma)
                    JOIN angajat a ON (ep.id_echipa_paza = a.id_echipa_paza)
                    JOIN depozit d ON (ep.id_echipa_paza = d.id_echipa_paza)
                    JOIN locatie l ON (d.id_locatie = l.id_locatie)              
                    JOIN avgs ON (avgs.id_firma = f.id_firma)
                    
WHERE a.tip_angajat = 'PAZNIC'
    and l.localitate in (SELECT * FROM loc_cm_vizitat_popas)
    and ( -- cate transporturi de marfa au intrat in depozit sub paza fiecarui angajat
         SELECT count(depozit_destinatie)
         FROM transport
         WHERE depozit_destinatie = d.id_depozit
            and data_plecare > a.data_angajare
         GROUP BY depozit_destinatie
         ) >= 1
ORDER BY a.salariu desc, a.nume, a.prenume;


-- TOOD nu pastra
---------------------------------------------------------------------------------

WITH 
    avgs AS -- media salariilor paznicilor per firma
    (SELECT round(avg(salariu)) salariu, id_firma
     FROM angajat
     WHERE tip_angajat = 'PAZNIC'
     GROUP BY id_firma
     ),
    
    cm_vizitat_popas AS -- id-ul celui mai vizitat popas
    (
     SELECT id_popas popas
     FROM istoric_popasuri
     GROUP BY id_popas
     HAVING count(id_popas) = (SELECT max(count(id_popas))
                               FROM istoric_popasuri
                               GROUP BY id_popas
                               )
     ),
     
    loc_cm_vizitat_popas AS -- localitatea in care se afla cel mai vizitat popas
    (SELECT sl.localitate localitate
     FROM locatie sl JOIN popas sp ON (sl.id_locatie = sp.id_locatie),
          cm_vizitat_popas cmvp
     WHERE sp.id_popas = cmvp.popas
     )
     

SELECT a.nume "Nume paznic", a.prenume "Prenume paznic", 
        CASE WHEN a.salariu < avgs.salariu THEN a.salariu + 200
             ELSE a.salariu + 100
        END "Salariu dorit",
        DECODE((a.salariu-3000)-abs(a.salariu-3000)         
         , 0, 'bine platit', 'prost platit') "Cat de bine este platit", 
        concat(substr(numtodsinterval((sysdate - a.data_angajare), 'DAY'), 8, 3) ||' zile ',
            substr(numtodsinterval((sysdate - a.data_angajare), 'DAY'), 12, 5)) "Vechime angajat",
        f.nume "Nume firma",
        'Jud: ' || NVL(l.judet, '-') || ' Loc: ' || NVL(l.localitate, '-') ||
        ' Str. ' || NVL(l.strada, '-') || ' Nr. ' || NVL(to_char(l.nr), '-') "Locatie depozit repartizat",
        
        ( -- nr de colegi ai unui angajat
         SELECT DECODE(count(id_echipa_paza)-1, 0, 'Nu are colegi', 1, 
                 to_char(count(id_echipa_paza)-1) || ' coleg', 
                 to_char(count(id_echipa_paza)-1) || ' colegi')
         FROM angajat
         WHERE id_echipa_paza = a.id_echipa_paza
         GROUP BY id_echipa_paza
         ) "Nr. Colegi"
        
FROM echipa_paza ep JOIN firma f ON (ep.id_firma = f.id_firma)
                    JOIN angajat a ON (ep.id_echipa_paza = a.id_echipa_paza)
                    JOIN depozit d ON (ep.id_echipa_paza = d.id_echipa_paza)
                    JOIN locatie l ON (d.id_locatie = l.id_locatie)              
                    JOIN avgs ON (avgs.id_firma = f.id_firma),
    loc_cm_vizitat_popas cmvp 
             
WHERE a.tip_angajat = 'PAZNIC'
    and l.localitate in cmvp.localitate
    and ( -- cate transporturi de marfa au intrat in depozit sub paza fiecarui angajat
         SELECT count(depozit_destinatie)
         FROM transport
         WHERE depozit_destinatie = d.id_depozit
            and data_plecare > a.data_angajare
         GROUP BY depozit_destinatie
         ) >= 1
ORDER BY a.salariu desc, a.nume, a.prenume;

-- ex 3

WITH ac AS -- informatii despre cei mai bine platiti soferi din firma unde sunt angajati si camionul curent
    (SELECT c.id_camion, c.marca, c.nr_inmatriculare, a.id_angajat, a.nume, 
            a.prenume, a.salariu, a.id_firma
     FROM angajat a JOIN istoric_camioane_conduse ic ON (a.id_angajat = ic.id_angajat)
                    JOIN camion c ON(c.id_camion = ic.id_camion)
     WHERE (a.salariu, a.id_firma) in (SELECT max(salariu), id_firma -- obtine salariul mare din firma
                                       FROM angajat
                                       WHERE tip_angajat = 'SOFER'
                                       GROUP BY tip_angajat, id_firma
                                       )
        and ic.data_sfarsit is null
     )

SELECT
     to_char(t.data_plecare, 'dd-mm-yyyy') "Data plecare",
     to_char(t.data_plecare, 'hh24:mi') "Ora",-- data plecare transport
     ac.nume "Nume sofer", ac.prenume "Prenume", -- cine a condus acest transport
     ac.salariu "Salariu sofer", -- ce salariu are
     DECODE((ac.salariu-3500)-abs(ac.salariu-3500)         
     , 0, 'bine platit', 'prost platit') "Cat de bine este platit", 
    
     ac.marca "Camion",
     ac.nr_inmatriculare "Nr inmatriculare",
     CASE WHEN substr(ac.nr_inmatriculare, 0, 2)= 'MM' THEN 'Maramures'
          WHEN substr(ac.nr_inmatriculare, 0, 2)= 'IS' THEN 'Iasi'
          WHEN substr(ac.nr_inmatriculare, 0, 2)= 'CT' THEN 'Constanta'
          WHEN substr(ac.nr_inmatriculare, 0, 1)= 'B' THEN 'Bucuresti'
          ELSE 'Necunoscut'
     END "Inmatriculat in judetul",
    
    (SELECT sf.nume -- cine detine depozitul de plecare
     FROM firma sf JOIN depozit sd ON (sf.id_firma = sd.id_firma)
     WHERE sd.id_depozit = t.depozit_plecare) "Proprietar depozit plecare", 
    (SELECT 'Loc: ' || NVL(sl.localitate, '-') || ' Str. ' -- unde se afla depozitul
        || NVL(sl.strada, '-') || ' Nr. ' || NVL(to_char(sl.nr), '-')
     FROM depozit sd JOIN locatie sl ON (sd.id_locatie = sl.id_locatie)
     WHERE sd.id_depozit = t.depozit_plecare) "Locatie depozit plecare",
     
    (SELECT sf.nume -- cine detine depozitul de destinatie
     FROM firma sf JOIN depozit sd ON (sf.id_firma = sd.id_firma)
     WHERE sd.id_depozit = t.depozit_destinatie) "Proprietar depozit destinatie", 
    (SELECT 'Loc: ' || NVL(sl.localitate, '-') || ' Str. ' -- unde se afla depozitul 
        || NVL(sl.strada, '-') || ' Nr. ' || NVL(to_char(sl.nr), '-')
     FROM depozit sd JOIN locatie sl ON (sd.id_locatie = sl.id_locatie)
     WHERE sd.id_depozit = t.depozit_destinatie) "Locatie depozit destinatie"
     
FROM transport t JOIN ac ON(t.id_camion = ac.id_camion)
            
WHERE t.data_plecare > (SELECT max(data_angajare)
                        FROM angajat
                        WHERE tip_angajat = 'SOFER')
ORDER BY t.data_plecare;


-- ex 4

WITH depozit_plecare AS
    (SELECT id_depozit, sf.nume detinator, 'Loc: ' || NVL(sl.localitate, '-')
        || ' Str. ' || NVL(sl.strada, '-') || ' Nr. ' || NVL(to_char(sl.nr), '-') locatie
    FROM firma sf JOIN depozit sd ON (sf.id_firma = sd.id_firma)
                  JOIN locatie sl ON (sd.id_locatie = sl.id_locatie)
    ),
    depozit_destinatie AS
    (SELECT id_depozit, sf.nume detinator, 'Loc: ' || NVL(sl.localitate, '-')
        || ' Str. ' || NVL(sl.strada, '-') || ' Nr. ' || NVL(to_char(sl.nr), '-') locatie
     FROM firma sf JOIN depozit sd ON (sf.id_firma = sd.id_firma)
                   JOIN locatie sl ON (sd.id_locatie = sl.id_locatie)
     )
    
SELECT lm.nume "Marfa", lm.cantitate "Cantitate marfa",
       DECODE(lower(lm.nume), 'carne miel', 'alimente', 'carne porc', 'alimente',
              'carne pui', 'alimente', 'lapte', 'alimente', 'rosii', 'alimente',
              'ardei', 'alimente', 'tricouri', 'imbracaminte', 'hanorace', 'imbracaminte',
              'rochii', 'imbracaminte', 'fuste', 'imbracaminte', 'blugi', 'imbracaminte',
              'pantofi', 'incaltaminte', 'necunoscut') "Tip aliment",
       c.marca "Marca camion", c.nr_inmatriculare "Nr. inmatriculare", 
       CASE WHEN substr(c.nr_inmatriculare, 0, 2)= 'MM' THEN 'Maramures'
            WHEN substr(c.nr_inmatriculare, 0, 2)= 'IS' THEN 'Iasi'
            WHEN substr(c.nr_inmatriculare, 0, 2)= 'CT' THEN 'Constanta'
            WHEN substr(c.nr_inmatriculare, 0, 1)= 'B' THEN 'Bucuresti'
            ELSE 'Necunoscut'
       END "Inmatriculat in judetul",
       to_char(t.data_plecare, 'dd-mm-yyyy hh24:mi') "Data si ora plecare",
       round(months_between(sysdate, t.data_plecare)) "Nr. luni de la transport",
       dp.detinator "Detinator depozit plecare", dp.locatie "Locatie depozit plecare", 
       dd.detinator "Detinator depozit destinatie", dd.locatie "Locatie depozit destinatie"

FROM transport t JOIN camion c ON(t.id_camion = c.id_camion)
                 JOIN firma f ON(c.id_firma = f.id_firma)
                 JOIN inventar_transport it ON(t.id_transport = it.id_transport)
                 JOIN lot_marfa lm ON(it.id_lot_marfa = lm.id_lot_marfa)
                 JOIN depozit_plecare dp ON(dp.id_depozit = t.depozit_plecare) 
                 JOIN depozit_destinatie dd ON(dd.id_depozit = t.depozit_destinatie) 
                 

WHERE data_plecare >= next_day((SELECT max(sa.data_angajare)
                                FROM angajat sa JOIN istoric_camioane_conduse sic ON(sa.id_angajat = sic.id_angajat)
                                                  JOIN camion sc ON(sic.id_camion = sc.id_camion)
                                WHERE sa.tip_angajat = 'SOFER' and sa.id_firma = f.id_firma
                                GROUP BY tip_angajat
                                ), 'MONDAY')
                                
ORDER BY t.data_plecare, lm.cantitate desc;


-- ex 5

WITH soferi AS -- soferii care detin cel putin 2 categorii de permis auto si care
    -- lucreaza la una din firmele: Road Logistics, Transibo, Lextom Trans Asd
    (SELECT a.id_angajat id_sofer
     FROM angajat a JOIN permis p ON (a.id_angajat = p.id_angajat)
                    JOIN firma f ON (f.id_firma = a.id_firma)
     WHERE initcap(f.nume) = 'Road Logistics' or initcap(f.nume) = 'Transibo'
        or initcap(f.nume) = 'Lextom Trans Asd'
     GROUP BY a.id_angajat
     HAVING count(p.id_angajat) >= 2
     )

SELECT a.nume "Nume sofer", a.prenume "Prenume",       
       CASE WHEN to_number(substr(numtodsinterval((sysdate - a.data_angajare), 'DAY'), 2, 9)) <= 356 THEN 'INCEPATOR'
            WHEN to_number(substr(numtodsinterval((sysdate - a.data_angajare), 'DAY'), 2, 9)) <= 700 THEN 'AVANSAT'
            ELSE 'PROFESIONIST'
       END "Experienta",
       DECODE((a.salariu-4000)-abs(a.salariu-4000), 0, 'bine platit', 'prost platit') "Cat de bine este platit", 
       c.marca "Marca camion", c.nr_inmatriculare "Nr. inmatriculare",
       (SELECT sf.nume -- cine detine depozitul de plecare
        FROM firma sf JOIN depozit sd ON (sf.id_firma = sd.id_firma)
        WHERE sd.id_depozit = t.depozit_plecare) "Proprietar depozit plecare", 
       (SELECT 'Loc: ' || NVL(sl.localitate, '-') || ' Str. ' -- unde se afla depozitul
                || NVL(sl.strada, '-') || ' Nr. ' || NVL(to_char(sl.nr), '-')
        FROM depozit sd JOIN locatie sl ON (sd.id_locatie = sl.id_locatie)
        WHERE sd.id_depozit = t.depozit_plecare) "Locatie depozit plecare",
        
       (SELECT sf.nume -- cine detine depozitul de destinatie
        FROM firma sf JOIN depozit sd ON (sf.id_firma = sd.id_firma)
        WHERE sd.id_depozit = t.depozit_destinatie) "Proprietar depozit destinatie", 
       (SELECT 'Loc: ' || NVL(sl.localitate, '-') || ' Str. ' -- unde se afla depozitul 
                || NVL(sl.strada, '-') || ' Nr. ' || NVL(to_char(sl.nr), '-')
        FROM depozit sd JOIN locatie sl ON (sd.id_locatie = sl.id_locatie)
        WHERE sd.id_depozit = t.depozit_destinatie) "Locatie depozit destinatie"    
       
FROM angajat a JOIN istoric_camioane_conduse ic ON(a.id_angajat = ic.id_angajat)
               JOIN camion c ON(ic.id_camion = c.id_camion)
               JOIN transport t ON(c.id_camion = t.id_camion)
WHERE a.id_angajat in (SELECT * FROM soferi)
    and ic.data_sfarsit is null;


